const ExcelJS = require('exceljs');
const path = require('path');
const fs = require('fs');

// üìÖ –°—å–æ–≥–æ–¥–Ω—ñ—à–Ω—è –¥–∞—Ç–∞
const today = new Date();
const dateIso = today.toISOString().slice(0, 10); // YYYY-MM-DD

// üßæ –®–ª—è—Ö–∏
const templatePath = path.join(__dirname, 'template.xlsx');
const jsonPath = path.join(__dirname, 'output', dateIso, 'data.json');
const outputDir = path.join(__dirname, 'output', dateIso);

// ‚ùó –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –Ω–∞—è–≤–Ω–æ—Å—Ç—ñ JSON
if (!fs.existsSync(jsonPath)) {
  console.error(`‚ùå –§–∞–π–ª ${jsonPath} –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ. –°–ø–æ—á–∞—Ç–∫—É –∑–≥–µ–Ω–µ—Ä—É–π –π–æ–≥–æ!`);
  process.exit(1);
}

const data = JSON.parse(fs.readFileSync(jsonPath, 'utf-8'));

// üß† –ö—ñ–ª—å–∫—ñ—Å—Ç—å —è—â–∏–∫—ñ–≤ –Ω–∞ –ø–∞–ª–µ—Ç—É –¥–ª—è –∫–æ–∂–Ω–æ–≥–æ –∫–ª—ñ—î–Ω—Ç–∞
function getBoxesPerPallet(clientName) {
  const name = clientName.toLowerCase();

  if (name.includes('aldi')) return 28;
  if (name.includes('lidl')) return 48;
  if (name.includes('biedronka')) return 28;
  if (name.includes('spar hrvatska')) return 48;
  if (name.includes('spar ljubljana')) return 48;
  if (name.includes('spar')) return 32;

  return 1; // –ó–∞ –∑–∞–º–æ–≤—á—É–≤–∞–Ω–Ω—è–º
}

async function fillTemplate() {
  for (const entry of data) {
    const newWorkbook = new ExcelJS.Workbook();
    await newWorkbook.xlsx.readFile(templatePath);
    const sheet = newWorkbook.getWorksheet('RAPORT WYDANIA F-NR 15');

    if (!sheet) {
      console.error('‚ùå –ê—Ä–∫—É—à "RAPORT WYDANIA F-NR 15" –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ –≤ —à–∞–±–ª–æ–Ω—ñ!');
      continue;
    }

    const client = entry['Odbiorca'];
    const qty = Number(entry['Ilo≈õƒá razem'] || 0);
    const providedPal = Number(entry['Pal'] || 0);

    // –û–±—á–∏—Å–ª–µ–Ω–Ω—è –ø–∞–ª–µ—Ç, —è–∫—â–æ –Ω–µ –∑–∞–¥–∞–Ω–æ
    const pal = providedPal > 0 ? providedPal : Math.ceil(qty / getBoxesPerPallet(client));

    sheet.getCell('J8').value = entry['Data wysy≈Çki'];
    sheet.getCell('C8').value = client;
    sheet.getCell('J25').value = `${qty} (${pal})`;
    sheet.getCell('J29').value = entry['Kierowca'];

    const safeClientName = client.replace(/[\\/:*?"<>|]/g, '_');
    const outputPath = path.join(outputDir, `${safeClientName}.xlsx`);

    await newWorkbook.xlsx.writeFile(outputPath);
    console.log(`üìÑ –°—Ç–≤–æ—Ä–µ–Ω–æ —Ñ–∞–π–ª: ${outputPath}`);
  }

  console.log('‚úÖ –£—Å—ñ –∑–≤—ñ—Ç–∏ –∑–≥–µ–Ω–µ—Ä–æ–≤–∞–Ω–æ —É—Å–ø—ñ—à–Ω–æ!');
}

fillTemplate().catch(console.error);
