const dropZone = document.getElementById('dropZone');
const fileInput = document.getElementById('fileInput');
const selectBtn = document.getElementById('selectBtn');
const generateBtn = document.getElementById('generateBtn');

// üì¶ –ú–æ–¥–∞–ª–∫–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—É
const modal = document.getElementById('modalMessage');
const modalText = document.getElementById('modalMessageText');
const modalOkBtn = document.getElementById('modalOkBtn');

// üìÖ –ú–æ–¥–∞–ª–∫–∞ –≤–∏–±–æ—Ä—É —Ç–∏–∂–Ω—è
const modalWeekPrompt = document.getElementById('modalWeekPrompt');
const weekInput = document.getElementById('weekInput');
const confirmWeekBtn = document.getElementById('confirmWeekBtn');
const cancelWeekBtn = document.getElementById('cancelWeekBtn');

let selectedFiles = [];
let generatedWeek = null;

// üìÅ –í–∏–±—ñ—Ä —Ñ–∞–π–ª—ñ–≤ (–∑–∞–ª–∏—à–∞—î–º–æ –¥–ª—è —É–Ω—ñ—Ñ—ñ–∫–∞—Ü—ñ—ó)
selectBtn.addEventListener('click', () => {
  fileInput.click();
});

fileInput.addEventListener('change', (event) => {
  selectedFiles = Array.from(event.target.files);
  if (selectedFiles.length > 0) {
    generateBtn.style.display = 'inline-block';
    dropZone.innerHTML = `Selected: <strong>${selectedFiles
      .map((f) => f.name)
      .join(', ')}</strong>`;
  }
});

// ‚ñ∂Ô∏è –ö–ª—ñ–∫ –ø–æ –∫–Ω–æ–ø—Ü—ñ "Generate" ‚Üí –ø–æ–∫–∞–∑–∞—Ç–∏ –º–æ–¥–∞–ª–∫—É —Ç–∏–∂–Ω—è
generateBtn.addEventListener('click', () => {
  weekInput.value = '';
  modalWeekPrompt.style.display = 'flex';
});

// ‚ùå –ó–∞–∫—Ä–∏—Ç–∏ –º–æ–¥–∞–ª–∫—É –≤–≤–æ–¥—É —Ç–∏–∂–Ω—è
cancelWeekBtn.addEventListener('click', () => {
  modalWeekPrompt.style.display = 'none';
});

// ‚úÖ –ü—ñ–¥—Ç–≤–µ—Ä–¥–∏—Ç–∏ —Ç–∏–∂–¥–µ–Ω—å —Ç–∞ –Ω–∞–¥—ñ—Å–ª–∞—Ç–∏ –∑–∞–ø–∏—Ç
confirmWeekBtn.addEventListener('click', async () => {
  const week = weekInput.value.trim();
  if (!week || isNaN(week) || Number(week) < 1 || Number(week) > 53) {
    return alert('‚ö†Ô∏è Please enter a valid week number (1‚Äì53).');
  }

  modalWeekPrompt.style.display = 'none';

  try {
    generateBtn.disabled = true;
    generateBtn.textContent = 'Generating...';
    const response = await fetch(`/api/generate-plan?week=${week}`);
    const text = await response.text();

    let result;
    try {
      result = JSON.parse(text);
    } catch (err) {
      console.error('‚ùå Not a JSON:', text);
      showModalMessage('‚ùå Server did not return valid JSON. Check server logs.');
      return;
    }

    if (result.message?.includes('‚úÖ')) {
      generatedWeek = week;
      const msg = `‚úÖ Plan for <strong>week ${week}</strong> generated.<br>Find it in <code>/output/${week}_Week</code>`;
      showModalMessage(msg);
    } else {
      showModalMessage(result.message || '‚ùå Failed to generate plan.');
    }
  } catch (err) {
    console.error(err);
    showModalMessage('‚ùå Something went wrong during generation.');
  } finally {
    generateBtn.disabled = false;
    generateBtn.textContent = 'Generate Report';
  }
});

// ü™ß –ü–æ–∫–∞–∑ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è
function showModalMessage(message) {
  modalText.innerHTML = message;
  modal.style.display = 'flex';
}

// ‚úÖ –ó–∞–∫—Ä–∏—Ç—Ç—è –º–æ–¥–∞–ª–∫–∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—É ‚Üí –≤—ñ–¥–∫—Ä–∏—Ç—Ç—è output-–ø–∞–ø–∫–∏
modalOkBtn.addEventListener('click', () => {
  modal.style.display = 'none';
  if (generatedWeek) {
    window.open(`/output/${generatedWeek}_Week`, '_blank');
  }
});
